import pygame as pg
import random
pg.init()
white = (255,255,255)
red = (255,0,0)
blue = (0,255,0)
green = (0,0,255)
black = (0,0,0)
from textbox import TextBox
menuDisplay = pg.display.set_mode((1200,600))
pg.display.set_caption("D3 Virtual Robot")

gameExit = False

import os
import sys
import pygame as pg

from textbox import TextBox


KEY_REPEAT_SETTING = (200,70)


class Control(object):
    def __init__(self):
        pg.init()
        pg.display.set_caption("Input Box")
        self.red = []
        self.blue = []
        self.green = []
        self.screen = menuDisplay
        self.clock = pg.time.Clock()
        self.fps = 60.0
        self.done = False
        self.input = TextBox((820,100,150,30),command=self.change_color,
                              clear_on_enter=True,inactive_on_enter=False)
        self.color = white
        self.prompt = self.make_prompt()
        pg.key.set_repeat(*KEY_REPEAT_SETTING)


    def make_prompt(self):
        font = pg.font.SysFont("arial", 15)
        message = 'Please input type you want to search'
        rend = font.render(message, True, pg.Color("black"))
        return (rend, rend.get_rect(topleft=(820,35)))

    def event_loop(self):
        for event in pg.event.get():
            if event.type == pg.QUIT:
                self.done = True
            self.input.get_event(event)

    def change_color(self,id,color):
        try:
            self.color = pg.Color(str(color))
        except ValueError:
            print("Please input a valid color name.")

    def random_types(self):
        for i in range(50):
            item = random.randint(1,3)
            print (item)
            radx = random.randint(0,790)
            rady = random.randint(0,590)
            if item == 1:
                pg.draw.rect(menuDisplay , red,(radx,rady,10,10))

            elif item == 2:
                pg.draw.rect(menuDisplay , blue,(radx,rady,10,10))
            elif item == 3:
                pg.draw.rect(menuDisplay, green,(radx,rady,10,10))
            i = i +1

    def main_loop(self):
        self.random_types()
        while not self.done:
            self.event_loop()
            self.input.update()
            self.input.draw(self.screen)
            self.screen.blit(*self.prompt)

            pg.display.update()
            self.clock.tick(self.fps)

menuDisplay.fill(white)
pg.draw.rect(menuDisplay , black,(800,0,10,600))
app = Control()
app.main_loop()




while not gameExit:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            gameExit = True


    pg.display.update()
pg.quit()
quit()
